{
  "workflow": {
    "unique_name": "definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s",
    "name": "InfluxDB.API - Insert_Data_Via_JSON",
    "title": "InfluxDB.API - Insert_Data_Via_JSON",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "METRICS",
          "scope": "input",
          "name": "Influx.Database",
          "type": "datatype.string",
          "description": "database to publish metric to",
          "is_required": true
        },
        "unique_name": "variable_workflow_01EY5NDL0OKLY1z7Mh338FLtsU83HZYdAha",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "{\n \"measurements\": [\n   {\n     \"measurement\": \"shaunTesting\",\n\t \"tags\": [\n\t    {\n\t\t   \"tag\": \"workflowName\",\n\t\t   \"value\": \"some workflow\"\n\t\t},\n\t\t{\n\t\t   \"tag\": \"category\",\n\t\t   \"value\": \"some category\"\n\t\t},\n\t\t{\n\t\t   \"tag\": \"automationPack\",\n\t\t   \"value\": \"some auto pack\"\n\t\t}\n\t ],\n\t \"fields\": [\n\t    {\n\t\t   \"field\": \"actionCount\",\n\t\t   \"value\": \"100\"\n\t\t},\n\t\t{\n\t\t   \"field\": \"runTime\",\n\t\t   \"value\": \"250\"\n\t\t},\n\t\t{\n\t\t   \"field\": \"timeSaved\",\n\t\t   \"value\": \"500\"\n\t\t},\n               {\n                   \"field\": \"someStringField\",\n                   \"type\": \"string\",\n                  \"value\":\"my_string\"\n               },\n\t\t{\n\t\t   \"field\": \"ROI\",\n\t\t   \"value\": \"500.25\"\n\t\t},\n\t\t{\n\t\t   \"field\": \"costPerHour\",\n\t\t   \"value\": \"100\"\n\t\t}\n\t ]\n\t}\n  ]\n}",
          "scope": "input",
          "name": "Influx.measurements_json",
          "type": "datatype.string",
          "description": "Measurements JSON that can include multiple measurements, tags, fields. See default example. Can take in single measurement or array of measurements via JSON. Default example is an array of measurements.",
          "is_required": true
        },
        "unique_name": "variable_workflow_01EY5NDL0OLWY0doq30FjluUrMcR7m760AS",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "s",
          "scope": "input",
          "name": "Influx.Precision",
          "type": "datatype.string",
          "description": "precision of the input to DB. Defaults to \"s\" or seconds.",
          "is_required": true
        },
        "unique_name": "variable_workflow_01EY5NDL0ON4N4hv1rTeuJyqhI9e8MWtHWs",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "local_empty",
          "type": "datatype.string",
          "is_required": false
        },
        "unique_name": "variable_workflow_01EY5NDL0OGQ66okR94HUzlMG6GpDUopXsP",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "local_measurements",
          "type": "datatype.string",
          "is_required": false
        },
        "unique_name": "variable_workflow_01EY5NDL0OCJY1Odc9XjqwNqGSHVL3pJJXJ",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "local_field_value",
          "type": "datatype.string",
          "is_required": false
        },
        "unique_name": "variable_workflow_01EY5NDL0OI096Au0CHKsyqOyzG2XCaGHSj",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "total_api_call",
          "type": "datatype.string",
          "is_required": false
        },
        "unique_name": "variable_workflow_01EY5NDL0OE326YY00URxTYx5SZo6JW2MpF",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.integer",
        "properties": {
          "value": 1,
          "scope": "local",
          "name": "ELSE",
          "type": "datatype.integer",
          "is_required": false
        },
        "unique_name": "variable_workflow_01EY5NDL0OODG3VqCFjakmtt0W0Wmw6ZanA",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.integer",
        "properties": {
          "value": 0,
          "scope": "local",
          "name": "local_loop_index",
          "type": "datatype.integer",
          "is_required": false
        },
        "unique_name": "variable_workflow_01EY5NDL0O8Z47XSaZAdamFguaOPIe6ESxa",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "local_build_api_input",
          "type": "datatype.string",
          "is_required": false
        },
        "unique_name": "variable_workflow_01EY5NDL0OJ9L0hj4EkOIsmICkfeTf8wqMC",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "local_temp_measurement",
          "type": "datatype.string",
          "is_required": false
        },
        "unique_name": "variable_workflow_01EY5NDL0OFFJ6prkKjs8H7mfqZWkoHpE1A",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "is_atomic": false
      },
      "delete_workflow_instance": false,
      "description": "This workflow takes in measurements via JSON construct and formats them for InfluxDB API calls. \nIf you need strings in field keys, make sure to add type to it, like example. test\nSOURCE SYSTEM: CX-AO-DEV-02",
      "display_name": "InfluxDB.API - Insert_Data_Via_JSON",
      "runtime_user": {
        "override_target_runtime_user": false,
        "specify_on_workflow_start": false,
        "target_default": true
      },
      "target": {
        "target_type": "web-service.endpoint",
        "specify_on_workflow_start": true
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_01EY5NE1S8FJ23wu9luZhO0vweLMy6kX3NQ",
        "name": "Condition Block",
        "title": "If single measurement",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "If single measurement",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_01EY5NE3X2DHD4UdqusxZHkdYmDLKL6zrbm",
            "name": "Condition Branch",
            "title": "THEN",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.input.variable_workflow_01EY5NDL0OLWY0doq30FjluUrMcR7m760AS$",
                "operator": "nmw",
                "right_operand": "*\"measurements\":*"
              },
              "continue_on_failure": false,
              "display_name": "THEN",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01EY5NE6KKSNH4f9bUF12DPCcaV2Q6tAuhr",
                "name": "Set Variables",
                "title": "Wrap single in multi tags",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Wrap single in multi tags",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OCJY1Odc9XjqwNqGSHVL3pJJXJ$",
                      "variable_value_new": "{\n  \"measurements\" : [\n     $workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.input.variable_workflow_01EY5NDL0OLWY0doq30FjluUrMcR7m760AS$\n   ]\n}"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ]
          },
          {
            "unique_name": "definition_activity_01EY5NE964GJF3ve1hCTqqFJLBGelQ9Ebtd",
            "name": "Condition Branch",
            "title": "ELSE",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OODG3VqCFjakmtt0W0Wmw6ZanA$",
                "operator": "eq",
                "right_operand": 1
              },
              "continue_on_failure": false,
              "display_name": "ELSE",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01EY5NEBZMZJC00lTRKBPSMnCOkddNPjVRv",
                "name": "Set Variables",
                "title": "Pass through",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Pass through",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OCJY1Odc9XjqwNqGSHVL3pJJXJ$",
                      "variable_value_new": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.input.variable_workflow_01EY5NDL0OLWY0doq30FjluUrMcR7m760AS$"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_01EY5NEFFUFFE3ugs3YP6OgQ6dSiCjm6TY1",
        "name": "Read Table from JSON",
        "title": "Read Measurements into Table",
        "type": "corejava.read_table_from_json",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "display_name": "Read Measurements into Table",
          "input_json": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OCJY1Odc9XjqwNqGSHVL3pJJXJ$",
          "jsonpath_query": "$..measurements[*]",
          "persist_output": true,
          "populate_columns": false,
          "skip_execution": false,
          "table_columns": [
            {
              "column_name": "measurement",
              "column_type": "string"
            },
            {
              "column_name": "tags",
              "column_type": "string"
            },
            {
              "column_name": "fields",
              "column_type": "string"
            }
          ]
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01EY5NEISRGLX4kHWIj9dY4KnbsUlNYeS2t",
        "name": "For Each",
        "title": "For Each Measurement",
        "type": "logic.for_each",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "For Each Measurement",
          "skip_execution": false,
          "source_array": "$activity.definition_activity_01EY5NEFFUFFE3ugs3YP6OgQ6dSiCjm6TY1.output.read_table_from_json$"
        },
        "object_type": "definition_activity",
        "actions": [
          {
            "unique_name": "definition_activity_01EY5NENN0HSD1RqgotTNIuHi6genRb7snA",
            "name": "Set Variables",
            "title": "Reset Temp API",
            "type": "core.set_multiple_variables",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "display_name": "Reset Temp API",
              "skip_execution": false,
              "variables_to_update": [
                {
                  "variable_to_update": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OJ9L0hj4EkOIsmICkfeTf8wqMC$",
                  "variable_value_new": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OGQ66okR94HUzlMG6GpDUopXsP$"
                },
                {
                  "variable_to_update": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OFFJ6prkKjs8H7mfqZWkoHpE1A$",
                  "variable_value_new": "$activity.definition_activity_01EY5NEISRGLX4kHWIj9dY4KnbsUlNYeS2t.input.source_array[@].measurement$"
                }
              ]
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_01EY5NERK30TC5GV8YDdSqHtP1jY2lwMoUd",
            "name": "Read Table from JSON",
            "title": "Read Tags",
            "type": "corejava.read_table_from_json",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": false,
              "display_name": "Read Tags",
              "input_json": "{\n \"tags\": $activity.definition_activity_01EY5NEISRGLX4kHWIj9dY4KnbsUlNYeS2t.input.source_array[@].tags$\n}",
              "jsonpath_query": "$..tags[*]",
              "persist_output": true,
              "populate_columns": false,
              "skip_execution": false,
              "table_columns": [
                {
                  "column_name": "tag",
                  "column_type": "string"
                },
                {
                  "column_name": "value",
                  "column_type": "string"
                }
              ]
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_01EY5NEWSOK0N0JA9pxPf0bNz4zTFcftFrL",
            "name": "Read Table from JSON",
            "title": "Read Fields",
            "type": "corejava.read_table_from_json",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": false,
              "display_name": "Read Fields",
              "input_json": "{\n \"fields\": $activity.definition_activity_01EY5NEISRGLX4kHWIj9dY4KnbsUlNYeS2t.input.source_array[@].fields$\n}",
              "jsonpath_query": "$..fields[*]",
              "persist_output": true,
              "populate_columns": false,
              "skip_execution": false,
              "table_columns": [
                {
                  "column_name": "field",
                  "column_type": "string"
                },
                {
                  "column_name": "value",
                  "column_type": "string"
                },
                {
                  "column_name": "type",
                  "column_type": "string"
                }
              ]
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_01EY5NF0EISG40J466A772EQgmNOrkv5hbN",
            "name": "Set Variables",
            "title": "Start API Query",
            "type": "core.set_multiple_variables",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "display_name": "Start API Query",
              "skip_execution": false,
              "variables_to_update": [
                {
                  "variable_to_update": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OJ9L0hj4EkOIsmICkfeTf8wqMC$",
                  "variable_value_new": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OFFJ6prkKjs8H7mfqZWkoHpE1A$,"
                }
              ]
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_01EY5NF3C6GT86SWFcsXNKLgV5M1hEJEeyf",
            "name": "For Each",
            "title": "For each TAG",
            "type": "logic.for_each",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "display_name": "For each TAG",
              "skip_execution": false,
              "source_array": "$activity.definition_activity_01EY5NERK30TC5GV8YDdSqHtP1jY2lwMoUd.output.read_table_from_json$"
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01EY5NF83KB720vdU2fDRUZGyG37OL3e834",
                "name": "Replace String",
                "title": "Offset Values",
                "type": "core.replacestring",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Offset Values",
                  "input_string": "$activity.definition_activity_01EY5NF3C6GT86SWFcsXNKLgV5M1hEJEeyf.input.source_array[@].value$",
                  "replace_list": [
                    {
                      "replaced_string": " ",
                      "replacement_string": "\\ "
                    },
                    {
                      "replaced_string": ",",
                      "replacement_string": "\\,"
                    },
                    {
                      "replaced_string": "=",
                      "replacement_string": "\\="
                    }
                  ],
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01EY5NFATMN770fCNm7rohGIjzzBY3jGeLo",
                "name": "Condition Block",
                "title": "if last one",
                "type": "logic.if_else",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "if last one",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "blocks": [
                  {
                    "unique_name": "definition_activity_01EY5NFCZ3R9Z7dlxQ6pidYFUl1cRwUaBCO",
                    "name": "Condition Branch",
                    "title": "THEN",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$activity.definition_activity_01EY5NERK30TC5GV8YDdSqHtP1jY2lwMoUd.output.row_count$",
                        "operator": "eq",
                        "right_operand": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0O8Z47XSaZAdamFguaOPIe6ESxa$ + 1"
                      },
                      "continue_on_failure": false,
                      "display_name": "THEN",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_01EY5NFFX2LOY3cRSXErBCfwT1XUDE4qFpM",
                        "name": "Set Variables",
                        "title": "Finish API Tags",
                        "type": "core.set_multiple_variables",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Finish API Tags",
                          "skip_execution": false,
                          "variables_to_update": [
                            {
                              "variable_to_update": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OJ9L0hj4EkOIsmICkfeTf8wqMC$",
                              "variable_value_new": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OJ9L0hj4EkOIsmICkfeTf8wqMC$$activity.definition_activity_01EY5NF3C6GT86SWFcsXNKLgV5M1hEJEeyf.input.source_array[@].tag$=$activity.definition_activity_01EY5NF83KB720vdU2fDRUZGyG37OL3e834.output.result_string$ "
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  },
                  {
                    "unique_name": "definition_activity_01EY5NFJ0WGE828q3Wb2PoeU6mr8l3wJ2QL",
                    "name": "Condition Branch",
                    "title": "ELSE",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OODG3VqCFjakmtt0W0Wmw6ZanA$",
                        "operator": "eq",
                        "right_operand": 1
                      },
                      "continue_on_failure": false,
                      "display_name": "ELSE",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_01EY5NFLZ2BOM1ts9DqRBbZDmPOtR3LiSq0",
                        "name": "Set Variables",
                        "title": "Build API Query",
                        "type": "core.set_multiple_variables",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Build API Query",
                          "skip_execution": false,
                          "variables_to_update": [
                            {
                              "variable_to_update": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OJ9L0hj4EkOIsmICkfeTf8wqMC$",
                              "variable_value_new": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OJ9L0hj4EkOIsmICkfeTf8wqMC$$activity.definition_activity_01EY5NF3C6GT86SWFcsXNKLgV5M1hEJEeyf.input.source_array[@].tag$=$activity.definition_activity_01EY5NF83KB720vdU2fDRUZGyG37OL3e834.output.result_string$,"
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  }
                ]
              },
              {
                "unique_name": "definition_activity_01EY5NFP1QZ9Z1V1XNw0Rf6HtCFJiXuL6EG",
                "name": "Set Variables",
                "title": "Index++",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Index++",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0O8Z47XSaZAdamFguaOPIe6ESxa$",
                      "variable_value_new": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0O8Z47XSaZAdamFguaOPIe6ESxa$ + 1"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ]
          },
          {
            "unique_name": "definition_activity_01EY5NFRMIQBB6gdJ3LFZDRYy6ko0e1wrwo",
            "name": "Set Variables",
            "title": "Reset Index",
            "type": "core.set_multiple_variables",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "display_name": "Reset Index",
              "skip_execution": false,
              "variables_to_update": [
                {
                  "variable_to_update": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0O8Z47XSaZAdamFguaOPIe6ESxa$",
                  "variable_value_new": 0
                }
              ]
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_01EY5NFU36GK03s0AqvD01QIugmRHIBXS8p",
            "name": "For Each",
            "title": "For each FIELD",
            "type": "logic.for_each",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "display_name": "For each FIELD",
              "skip_execution": false,
              "source_array": "$activity.definition_activity_01EY5NEWSOK0N0JA9pxPf0bNz4zTFcftFrL.output.read_table_from_json$"
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01EY5NFYLNW4C4PEuj3Y1JgLujCHyq9iZGg",
                "name": "Replace String",
                "title": "Offset Values",
                "type": "core.replacestring",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Offset Values",
                  "input_string": "$activity.definition_activity_01EY5NFU36GK03s0AqvD01QIugmRHIBXS8p.input.source_array[@].value$",
                  "replace_list": [
                    {
                      "replaced_string": " ",
                      "replacement_string": "\\ "
                    },
                    {
                      "replaced_string": ",",
                      "replacement_string": "\\,"
                    },
                    {
                      "replaced_string": "=",
                      "replacement_string": "\\="
                    }
                  ],
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01EY5NG1L38CI37OD8AezWRbJ2WtFuGJPDy",
                "name": "Condition Block",
                "title": "If type==string",
                "type": "logic.if_else",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "If type==string",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "blocks": [
                  {
                    "unique_name": "definition_activity_01EY5NG3Y2W1J4LWOwvgH0ZqffT4AQUtFQ1",
                    "name": "Condition Branch",
                    "title": "THEN",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$activity.definition_activity_01EY5NFU36GK03s0AqvD01QIugmRHIBXS8p.input.source_array[@].type$",
                        "operator": "eq",
                        "right_operand": "string"
                      },
                      "continue_on_failure": false,
                      "display_name": "THEN",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_01EY5NG7FHOLJ3ys4szsA7f91oDGZ3hYqcP",
                        "name": "Set Variables",
                        "title": "Add Quotes",
                        "type": "core.set_multiple_variables",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Add Quotes",
                          "skip_execution": false,
                          "variables_to_update": [
                            {
                              "variable_to_update": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OI096Au0CHKsyqOyzG2XCaGHSj$",
                              "variable_value_new": "\"$activity.definition_activity_01EY5NFYLNW4C4PEuj3Y1JgLujCHyq9iZGg.output.result_string$\""
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  },
                  {
                    "unique_name": "definition_activity_01EY5NGAI81Z14I9q4sMQWnHxabQTJCI8n9",
                    "name": "Condition Branch",
                    "title": "Else",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OODG3VqCFjakmtt0W0Wmw6ZanA$",
                        "operator": "eq",
                        "right_operand": 1
                      },
                      "continue_on_failure": false,
                      "display_name": "Else",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_01EY5NGD7WP5H5t9JcV6yjwhasJYbmhqK6j",
                        "name": "Set Variables",
                        "title": "Passthrough",
                        "type": "core.set_multiple_variables",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Passthrough",
                          "skip_execution": false,
                          "variables_to_update": [
                            {
                              "variable_to_update": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OI096Au0CHKsyqOyzG2XCaGHSj$",
                              "variable_value_new": "$activity.definition_activity_01EY5NFYLNW4C4PEuj3Y1JgLujCHyq9iZGg.output.result_string$"
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  }
                ]
              },
              {
                "unique_name": "definition_activity_01EY5NGG4285O0kzZHQrfAafVPJNvogEzpy",
                "name": "Condition Block",
                "title": "if last one",
                "type": "logic.if_else",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "if last one",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "blocks": [
                  {
                    "unique_name": "definition_activity_01EY5NGIHO76X1GlxIYx4HePhV735unS6R5",
                    "name": "Condition Branch",
                    "title": "THEN",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$activity.definition_activity_01EY5NEWSOK0N0JA9pxPf0bNz4zTFcftFrL.output.row_count$",
                        "operator": "eq",
                        "right_operand": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0O8Z47XSaZAdamFguaOPIe6ESxa$ + 1"
                      },
                      "continue_on_failure": false,
                      "display_name": "THEN",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_01EY5NGLUWL363vMv4K3IOoA9rUcO1fPXXO",
                        "name": "Set Variables",
                        "title": "Finish API Tags",
                        "type": "core.set_multiple_variables",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Finish API Tags",
                          "skip_execution": false,
                          "variables_to_update": [
                            {
                              "variable_to_update": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OJ9L0hj4EkOIsmICkfeTf8wqMC$",
                              "variable_value_new": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OJ9L0hj4EkOIsmICkfeTf8wqMC$$activity.definition_activity_01EY5NFU36GK03s0AqvD01QIugmRHIBXS8p.input.source_array[@].field$=$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OI096Au0CHKsyqOyzG2XCaGHSj$"
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  },
                  {
                    "unique_name": "definition_activity_01EY5NGOV3U5J2YAwpjFiT4y8F5G7JYoJ3E",
                    "name": "Condition Branch",
                    "title": "ELSE",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OODG3VqCFjakmtt0W0Wmw6ZanA$",
                        "operator": "eq",
                        "right_operand": 1
                      },
                      "continue_on_failure": false,
                      "display_name": "ELSE",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_01EY5NGRHRYWY1XTu4veuN0SGDqt0Q4gGRs",
                        "name": "Set Variables",
                        "title": "Build API Query",
                        "type": "core.set_multiple_variables",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Build API Query",
                          "skip_execution": false,
                          "variables_to_update": [
                            {
                              "variable_to_update": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OJ9L0hj4EkOIsmICkfeTf8wqMC$",
                              "variable_value_new": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OJ9L0hj4EkOIsmICkfeTf8wqMC$$activity.definition_activity_01EY5NFU36GK03s0AqvD01QIugmRHIBXS8p.input.source_array[@].field$=$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OI096Au0CHKsyqOyzG2XCaGHSj$,"
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  }
                ]
              },
              {
                "unique_name": "definition_activity_01EY5NGUGX4ZD1nyecoNMgpAP9FUw7FWJW6",
                "name": "Set Variables",
                "title": "Index++",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Index++",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0O8Z47XSaZAdamFguaOPIe6ESxa$",
                      "variable_value_new": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0O8Z47XSaZAdamFguaOPIe6ESxa$ + 1"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ]
          },
          {
            "unique_name": "definition_activity_01EY5NGWTSXBD6pXnJRNg1XJWMd7xAfMxux",
            "name": "Condition Block",
            "title": "If starting API",
            "type": "logic.if_else",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "display_name": "If starting API",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "blocks": [
              {
                "unique_name": "definition_activity_01EY5NGZ3X2SZ2eH2F7Sa8oAtkNlIY71xBm",
                "name": "Condition Branch",
                "title": "THEN",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OE326YY00URxTYx5SZo6JW2MpF$",
                    "operator": "eq",
                    "right_operand": ""
                  },
                  "continue_on_failure": false,
                  "display_name": "THEN",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_01EY5NH1RDVSX0HvSMZRSmKktdXM25I0wWR",
                    "name": "Set Variables",
                    "title": "Start API Build",
                    "type": "core.set_multiple_variables",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "display_name": "Start API Build",
                      "skip_execution": false,
                      "variables_to_update": [
                        {
                          "variable_to_update": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OE326YY00URxTYx5SZo6JW2MpF$",
                          "variable_value_new": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OJ9L0hj4EkOIsmICkfeTf8wqMC$"
                        }
                      ]
                    },
                    "object_type": "definition_activity"
                  }
                ]
              },
              {
                "unique_name": "definition_activity_01EY5NH4Q7PO601ICBOR8Z9FDlixcnxBANu",
                "name": "Condition Branch",
                "title": "ELSE",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OODG3VqCFjakmtt0W0Wmw6ZanA$",
                    "operator": "eq",
                    "right_operand": 1
                  },
                  "continue_on_failure": false,
                  "display_name": "ELSE",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_01EY5NH7HQPGZ7i9ktarpokXbETSsMR792l",
                    "name": "Set Variables",
                    "title": "Continue API BUild",
                    "type": "core.set_multiple_variables",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "display_name": "Continue API BUild",
                      "skip_execution": false,
                      "variables_to_update": [
                        {
                          "variable_to_update": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OE326YY00URxTYx5SZo6JW2MpF$",
                          "variable_value_new": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OE326YY00URxTYx5SZo6JW2MpF$\n$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OJ9L0hj4EkOIsmICkfeTf8wqMC$"
                        }
                      ]
                    },
                    "object_type": "definition_activity"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_01EY5NHB8KQMC5akXR1UzoVl3l0m4cBxN9v",
        "name": "HTTP Request",
        "title": "Insert Measurement",
        "type": "web-service.http_request",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "allow_auto_redirect": true,
          "body": "$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.local.variable_workflow_01EY5NDL0OE326YY00URxTYx5SZo6JW2MpF$",
          "content_type": "application/json",
          "continue_on_error_status_code": false,
          "continue_on_failure": false,
          "display_name": "Insert Measurement",
          "method": "POST",
          "relative_url": "write?db=$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.input.variable_workflow_01EY5NDL0OKLY1z7Mh338FLtsU83HZYdAha$&precision=$workflow.definition_workflow_01EY5NDL60WMM17MfFrVIeuFjlRyXRNFM1s.input.variable_workflow_01EY5NDL0ON4N4hv1rTeuJyqhI9e8MWtHWs$",
          "runtime_user": {
            "override_target_runtime_user": false,
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "override_workflow_target": false,
            "override_workflow_target_group_criteria": false,
            "use_workflow_target": true,
            "use_workflow_target_group": false
          }
        },
        "object_type": "definition_activity"
      }
    ],
    "categories": [
      "category_01B2IWKXXKWYZ1iQdFndhb5T5P31ACd0GV8"
    ]
  },
  "categories": {
    "category_01B2IWKXXKWYZ1iQdFndhb5T5P31ACd0GV8": {
      "unique_name": "category_01B2IWKXXKWYZ1iQdFndhb5T5P31ACd0GV8",
      "name": "InfluxDB.API",
      "title": "InfluxDB.API",
      "type": "basic.category",
      "base_type": "category",
      "category_type": "custom",
      "object_type": "category"
    }
  }
}